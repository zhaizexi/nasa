// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Topic {
  id       String           @id @default(uuid())
  name     String           @unique
  title    String           @unique
  subtitle String
  maskUrl  String?
  news     News[]
  missions TopicOnMission[]
}

model Slide {
  id       String  @id @default(uuid())
  title    String  @unique
  url      String
  videoUrl String
  active   Boolean @default(true)
}

model News {
  id      String @id @default(uuid())
  title   String @unique
  content String
  maskUrl String
  topicId String
  topic   Topic? @relation(fields: [topicId], references: [id])
}

model Target {
  id        String    @id @default(uuid())
  name      String    @unique
  imgUrl    String
  indisplay Boolean   @default(true)
  missions  TargetonMission[]
}

enum MissionStatus {
  past
  current
  future
  proposed
}

model TypeOnMission {
  mission   Mission     @relation(fields: [missionId], references: [id])
  missionId String // relation scalar field (used in the `@relation` attribute above)
  type      MissionType @relation(fields: [typeId], references: [id])
  typeId    String // relation scalar field (used in the `@relation` attribute above)

  @@id([missionId, typeId])
}

model TopicOnMission {
  mission   Mission @relation(fields: [missionId], references: [id])
  missionId String // relation scalar field (used in the `@relation` attribute above)
  topic     Topic   @relation(fields: [topicId], references: [id])
  topicId   String // relation scalar field (used in the `@relation` attribute above)

  @@id([missionId, topicId])
}

model MissionType {
  id       String          @id @default(uuid())
  name     String          @unique
  missions TypeOnMission[]
}
model TargetonMission {
  mission   Mission @relation(fields: [missionId], references: [id])
  missionId String // relation scalar field (used in the `@relation` attribute above)
  target    Target   @relation(fields: [targetId], references: [id])
  targetId   String // relation scalar field (used in the `@relation` attribute above)

  @@id([missionId, targetId])
}

model Mission {
  id          String           @id @default(uuid())
  name        String           @unique
  maskUrl     String           @default("")
  abbr        String?
  href        String?
  description String?
  content     String
  launchDate  DateTime         @db.Date
  status      MissionStatus    @default(current)
  types       TypeOnMission[]
  topics      TopicOnMission[]
  targets     TargetonMission[]
  relateSite  Json?
  instruments String[]         @default([])
}
